import pygame
import os
import random

#Pseudo
#while True :
   # pseudo = input("Quel est votre pseudo? ")
   # if len(pseudo) >= 3 :    
   #     break
  #  else :
   #     print("Votre pseudo doit contenir au moins 3 caractères")
#while True :
   # if pseudo [0].isalpha() :
     #   print(f"Merci. Votre pseudo est {pseudo}")
     #   break
   # else :
     #   print("Le pseudo doit commencer par une lettre")
     #   pseudo = input("Quel est votre pseudo? ")    
#Âge   
#while True :
   # try :
      #  age = int(input("Quel est votre âge? "))
       # if age > 0  :
        #    print("Merci")
        #    break
       # else :
        #    print("Votre âge doit être supérieure à 0 années") 
    #except ValueError :
     #   print("Veuillez entrer un nombre entier")



# Initialisation de pygame
pygame.init()

# Création de la fenêtre
largeur, hauteur = 800, 600
fenetre = pygame.display.set_mode((largeur, hauteur))
pygame.display.set_caption("Flappy Bird")

# Couleurs 
blanc = (255, 255, 255)
noir = (0, 0, 0)
gris = (100, 100, 100)
orange = (255, 165, 0)

# Vitesse de déplacement du sol
scroll_speed = 2
# Score
score = 0

# Gestion des tuyaux
pipe = pygame.image.load(os.path.join('images', 'Pipe.png'))
hauteur_tuyau = 250
largeur_tuyau = 75
pipe = pygame.transform.scale(pipe, (largeur_tuyau, hauteur))

# Positionner les tuyaux
tuyaux = []
intervalle = largeur // 3 + largeur_tuyau // 3
espace_tuyaux = 200  # Espace entre les tuyaux du haut et du bas

for i in range(3):
    hauteur_tuyau_bas = random.randint(100, 400)
    tuyauX = largeur + i * intervalle
    tuyauY_bas = hauteur - hauteur_tuyau_bas
    tuyauY_haut = tuyauY_bas - espace_tuyaux - hauteur
    tuyaux.append({
        "rect_bas": pygame.Rect(tuyauX, tuyauY_bas, largeur_tuyau, hauteur_tuyau_bas),
        "rect_haut": pygame.Rect(tuyauX, tuyauY_haut, largeur_tuyau, hauteur),
        "depasse": False
    })

# Gestion de l'image arrière plan
background = pygame.image.load(os.path.join('images', 'background.png'))
background = pygame.transform.scale(background, (largeur, hauteur))
background_x = 0

# Gestion de l'image de l'oiseau
taille_birdX, taille_birdY = 50, 35
bird = pygame.image.load(os.path.join('images', 'Bird.png'))
bird = pygame.transform.scale(bird, (taille_birdX, taille_birdY))

# Gestion de l'image Sol (Ground)
ground = pygame.image.load(os.path.join('images', 'Ground.png'))
hauteur_sol = ground.get_height()
ground = pygame.transform.scale(ground, (largeur, hauteur_sol))

# Positionner le sol
groundX, groundY = 0, 540

# Position de l'oiseau
birdX = largeur // 6 - bird.get_width() // 6
birdY = hauteur // 2 - bird.get_height() // 2

# Rectangle pour l'oiseau
bird_rect = pygame.Rect(birdX, birdY, taille_birdX, taille_birdY)

# Paramètre de l'écran de lancement
font = pygame.font.SysFont("comicsans", 40)
font_pseudo = pygame.font.SysFont("comicsans", 40)
title_pseudo = font_pseudo.render("Bienvenue ", True, orange)
title_text = font.render("Appuyez sur ESPACE pour jouer", True, noir)

gameOn = False

# Paramètres de texte
Taille_titre, Taille_score = 40, 20
font_titre = pygame.font.SysFont("comicsans", Taille_titre)
font_score = pygame.font.SysFont("comicsans", Taille_score)

# Paramètres de saut
isJumping = False
jumpForce = 11
gravity = 1
velocityY = 0

nombre_partie = 0

# Boucle principale
running = True
last_score = 0

while running:
    fenetre.fill(blanc)
    
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_SPACE:
                isJumping = True
                gameOn = True
                velocityY = -jumpForce

    # Détection des sauts réussis
    bird_rect = pygame.Rect(birdX, birdY, bird.get_width(), bird.get_height())
    for tuyau in tuyaux:
        if not tuyau["depasse"] and tuyau["rect_bas"].right < birdX:
            score += 1
            tuyau["depasse"] = True

    title_score = font.render(f"Votre score: {last_score}", True, noir)

    if not gameOn:
        fenetre.blit(title_pseudo, (largeur // 2 - title_score.get_width() // 2 + 45, 75))
        fenetre.blit(title_text, (largeur // 2 - title_text.get_width() // 2, 500))
        fenetre.blit(title_score, (largeur // 2 - title_score.get_width() // 2, hauteur // 2 - title_score.get_height() // 2 - 50))
        pygame.display.flip()
        pygame.time.Clock().tick(60)
        continue

    if isJumping:
        birdY += velocityY
        velocityY += gravity
        bird_rect.y = birdY

    if birdY <= 0:
        birdY = 0
        velocityY = 1

    # Mouvement des tuyaux
    for tuyau in tuyaux:
        tuyau["rect_bas"].x -= scroll_speed + 1
        tuyau["rect_haut"].x -= scroll_speed + 1
        
        if tuyau["rect_bas"].right < 0:
            tuyau["rect_bas"].x = largeur
            tuyau["rect_haut"].x = largeur
            hauteur_tuyau_bas = random.randint(100, 400)
            tuyau["rect_bas"].height = hauteur_tuyau_bas
            tuyau["rect_bas"].y = hauteur - tuyau["rect_bas"].height
            tuyau["rect_haut"].y = tuyau["rect_bas"].y - espace_tuyaux - hauteur
            tuyau["depasse"] = False

    # Afficher background
    fenetre.blit(background, (background_x, 0))

    # Afficher oiseau
    fenetre.blit(bird, (birdX, birdY))

    # Afficher sol
    groundX -= scroll_speed
    if groundX <= -largeur:
        groundX = 0
    fenetre.blit(ground, (groundX, groundY))
    fenetre.blit(ground, (groundX + largeur, hauteur - 60))

    # Afficher les tuyaux
    for tuyau in tuyaux:
        fenetre.blit(pipe, (tuyau["rect_bas"].x, tuyau["rect_bas"].y))
        pipe_haut = pygame.transform.flip(pipe, False, True)
        fenetre.blit(pipe_haut, (tuyau["rect_haut"].x, tuyau["rect_haut"].y))

    # Détection de collision
    for tuyau in tuyaux:
        if bird_rect.colliderect(tuyau["rect_bas"]) or bird_rect.colliderect(tuyau["rect_haut"]) or birdY >= 522:
            print(f"Votre score : {score}")
            gameOn = False
            last_score = score
            score = 0
            birdX = largeur // 6 - bird.get_width() // 6
            birdY = hauteur // 2 - bird.get_height() // 2
            bird_rect = pygame.Rect(birdX, birdY, taille_birdX, taille_birdY)
            tuyaux = []
            for i in range(3):
                hauteur_tuyau_bas = random.randint(100, 400)
                tuyauX = largeur + i * intervalle
                tuyauY_bas = hauteur - hauteur_tuyau_bas
                tuyauY_haut = tuyauY_bas - espace_tuyaux - hauteur
                tuyaux.append({
                    "rect_bas": pygame.Rect(tuyauX, tuyauY_bas, largeur_tuyau, hauteur_tuyau_bas),
                    "rect_haut": pygame.Rect(tuyauX, tuyauY_haut, largeur_tuyau, hauteur),
                    "depasse": False
                })
            isJumping = False
            velocityY = 0
            groundX = 0
            nombre_partie += 1

    # Affichage du score
    jump_counter_text = font_score.render(f"Score: {score}", True, noir)
    fenetre.blit(jump_counter_text, (30, 10))

    pygame.display.flip()
    pygame.time.Clock().tick(60)

pygame.quit()

